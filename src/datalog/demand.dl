.type var <: symbol
.type token <: symbol
.type field <: symbol
.decl magic_pointsTo_bb(x:var, t:token) 
.decl magic_pointsTo_bf(x:var) 
.decl magic_pointsToField_bbb(t:token, f:field, v:token) 
.decl magic_pointsToField_bbf(t:token, f:field) 
.decl assign(x:var, y:var) 
.decl load(dst:var, base:var, f:field) 
.decl new(x:var, t:token) 
.decl pointsTo_bb(x:var, t:token) 
.decl pointsTo_bf(x:var, t:token) 
.decl pointsToField_bbb(t:token, f:field, v:token) 
.decl pointsToField_bbf(t:token, f:field, v:token) 
.decl query(t:token) 
.decl store(base:var, f:field, src:var) 
magic_pointsTo_bb(y,z) :- 
   magic_pointsTo_bb(x,z),
   assign(x,y).

magic_pointsTo_bb(r,t) :- 
   magic_pointsToField_bbb(t,f,_),
   store(r,f,_).

magic_pointsTo_bb(s,v) :- 
   magic_pointsToField_bbb(t,f,v),
   store(r,f,s),
   pointsTo_bb(r,t).

magic_pointsTo_bb(r,t) :- 
   magic_pointsToField_bbf(t,f),
   store(r,f,_).

magic_pointsTo_bf(y) :- 
   magic_pointsTo_bb(x,_),
   load(x,y,_).

magic_pointsTo_bf(y) :- 
   magic_pointsTo_bf(x),
   assign(x,y).

magic_pointsTo_bf(y) :- 
   magic_pointsTo_bf(x),
   load(x,y,_).

magic_pointsTo_bf(s) :- 
   magic_pointsToField_bbf(t,f),
   store(r,f,s),
   pointsTo_bb(r,t).

magic_pointsTo_bf("x2").

magic_pointsToField_bbb(z,f,v) :- 
   magic_pointsTo_bb(x,v),
   load(x,y,f),
   pointsTo_bf(y,z).

magic_pointsToField_bbf(z,f) :- 
   magic_pointsTo_bf(x),
   load(x,y,f),
   pointsTo_bf(y,z).

pointsTo_bb(x,y) :- 
   magic_pointsTo_bb(x,y),
   new(x,y).

pointsTo_bb(x,z) :- 
   magic_pointsTo_bb(x,z),
   assign(x,y),
   pointsTo_bb(y,z).

pointsTo_bb(x,v) :- 
   magic_pointsTo_bb(x,v),
   load(x,y,f),
   pointsTo_bf(y,z),
   pointsToField_bbb(z,f,v).

pointsTo_bf(x,y) :- 
   magic_pointsTo_bf(x),
   new(x,y).

pointsTo_bf(x,z) :- 
   magic_pointsTo_bf(x),
   assign(x,y),
   pointsTo_bf(y,z).

pointsTo_bf(x,v) :- 
   magic_pointsTo_bf(x),
   load(x,y,f),
   pointsTo_bf(y,z),
   pointsToField_bbf(z,f,v).

pointsToField_bbb(t,f,v) :- 
   magic_pointsToField_bbb(t,f,v),
   store(r,f,s),
   pointsTo_bb(r,t),
   pointsTo_bb(s,v).

pointsToField_bbf(t,f,v) :- 
   magic_pointsToField_bbf(t,f),
   store(r,f,s),
   pointsTo_bb(r,t),
   pointsTo_bf(s,v).

query(t) :- 
   pointsTo_bf(abdul0,t),
   abdul0 = "x2".
.input new
.input assign
.input load
.input store
.output query
.output magic_pointsTo_bb
.output magic_pointsTo_bf
.output magic_pointsToField_bbb
.output magic_pointsToField_bbf
.output pointsTo_bb
.output pointsTo_bf
.output pointsToField_bbb
.output pointsToField_bbf
